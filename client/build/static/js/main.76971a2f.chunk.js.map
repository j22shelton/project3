{"version":3,"sources":["utils/API.js","components/Nav/index.js","components/GetStarted/index.js","components/Grid/index.js","components/InputForm/index.js","components/DeleteBtn/index.js","pages/MainPage.js","pages/City.js","App.js","serviceWorker.js","index.js"],"names":["API","getNumbeo","query","axios","get","getScenarios","getScenario","id","deleteScenario","delete","saveScenario","scenarioData","alert","total_assets","income_in_retirement","retirement_age","target_city","console","log","post","getLoginStatus","Nav","props","logout","react_default","a","createElement","className","href","target","rel","isAuthenticated","onClick","src","alt","GetStarted","Jumbotron","_ref","children","style","height","clear","paddingTop","textAlign","Container","_ref2","fluid","Row","_ref3","Col","_ref4","size","split","map","join","Input","Object","assign","FormBtn","float","marginBottom","DeleteBtn","cpir","role","tabIndex","MainPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadScenario","then","res","setState","userData","data","assets","income","age","catch","err","loadScenarios","handleInputChange","event","defineProperty","name","value","handleFormSubmit","cityname","state","preventDefault","user_name","city_cpir","fetchUserStatus","bind","assertThisInitialized","_this2","_this3","components_Nav","onChange","type","placeholder","handleDropdownChange","disabled","scope","length","scenario","key","_id","toLocaleString","navigator","language","maximumFractionDigits","react_router_dom","to","components_DeleteBtn","Component","City","match","params","Grid","App","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"ubAEeA,EAAA,CAEXC,UAAW,SAAUC,GACjB,OAAOC,IAAMC,IAAI,mEAAqEF,IAyB1FG,aAAc,WACd,OAAOF,IAAMC,IAAI,mBAIjBE,YAAa,SAAUC,GACnB,OAAOJ,IAAMC,IAAI,kBAAoBG,IAGzCC,eAAgB,SAAUD,GACtB,OAAOJ,IAAMM,OAAO,kBAAoBF,IAG5CG,aAAc,SAAUC,GAGpB,OAFAC,MAAMD,EAAaE,aAAc,IAAIF,EAAaG,qBAAqB,IAAIH,EAAaI,eAAe,IAAIJ,EAAaK,aACxHC,QAAQC,IAAIP,GACLR,IAAMgB,KAAK,iBAAkBR,IAExCS,eAAgB,WACZ,OAAOjB,IAAMC,IAAI,6BC2BViB,MAvEf,SAAaC,GACT,IAyBMC,EAAS,WACbN,QAAQC,IAAI,WAGd,OACAM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDAA+CpB,GAAG,UAC7DiB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,yBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BpB,GAAG,qBACzCiB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,sGAAsGC,OAAO,SAASC,IAAI,uBAAlI,yCAGbN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAxCrBL,EAAMS,gBAENP,EAAAC,EAAAC,cAAA,UAAQM,QAAST,GAAjB,UAIAC,EAAAC,EAAAC,cAAA,KAAGE,KAAK,qCACNJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,cACVM,IAAI,8EACJC,IAAI,YAGRV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACXH,EAAAC,EAAAC,cAAA,qCA4CRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BC/DhB,SAASQ,EAAWb,GACvB,OAEEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sDACEF,EAAAC,EAAAC,cAAA,iCCMKU,MAXf,SAAAC,GAAiC,IAAZC,EAAYD,EAAZC,SACnB,OACEd,EAAAC,EAAAC,cAAA,OACEa,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEhB,UAAU,aAETW,IAQA,SAASM,EAATC,GAAwCA,EAAnBC,MAAmB,IAAZR,EAAYO,EAAZP,SACjC,OAAOd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBW,GAKpC,SAASS,EAATC,GAAkCA,EAAnBF,MAAmB,IAAZR,EAAYU,EAAZV,SAC3B,OAAOd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOW,GAMxB,SAASW,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAMb,EAAYY,EAAZZ,SAC1B,OACEd,EAAAC,EAAAC,cAAA,OACEC,UAAWwB,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAEPhB,SC9BA,SAASiB,EAAMjC,GACpB,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAA8B,OAAAC,OAAA,CAAO9B,UAAU,gBAAmBL,KAwBnC,SAASoC,EAAQpC,GACtB,OACEE,EAAAC,EAAAC,cAAA,SAAA8B,OAAAC,OAAA,GAAYnC,EAAZ,CAAmBiB,MAAO,CAAEoB,MAAO,QAASC,aAAc,IAAMjC,UAAU,iBACvEL,EAAMgB,sBC1BEuB,ICCXC,EDDWD,EARf,SAAmBvC,GACjB,OACEE,EAAAC,EAAAC,cAAA,OAAA8B,OAAAC,OAAA,CAAM9B,UAAU,cAAiBL,EAAjC,CAAwCyC,KAAK,SAASC,SAAS,MAA/D,WCwOWC,cA7NX,SAAAA,EAAY3C,GAAO,IAAA4C,EAAA,OAAAV,OAAAW,EAAA,EAAAX,CAAAY,KAAAH,IACfC,EAAAV,OAAAa,EAAA,EAAAb,CAAAY,KAAAZ,OAAAc,EAAA,EAAAd,CAAAS,GAAAM,KAAAH,KAAM9C,KAyBVkD,aAAe,WACXxE,EAAIM,cACDmE,KAAK,SAAAC,GAAG,OACPR,EAAKS,SAAS,CAAEC,SAAUF,EAAIG,KAAMC,OAAQ,GAAIC,OAAQ,GAAIC,IAAK,OAElEC,MAAM,SAAAC,GAAG,OAAIjE,QAAQC,IAAIgE,MA/BbhB,EAkCnB1D,eAAiB,SAAAD,GACbP,EAAIQ,eAAeD,GACdkE,KAAK,SAAAC,GAAG,OAAIR,EAAKiB,kBACjBF,MAAM,SAAAC,GAAG,OAAIjE,QAAQC,IAAIgE,MArCfhB,EAwCnBkB,kBAAoB,SAAAC,GAChBnB,EAAKS,SAALnB,OAAA8B,EAAA,EAAA9B,CAAA,GACK6B,EAAMxD,OAAO0D,KAAOF,EAAMxD,OAAO2D,SA1CvBtB,EAuDnBuB,iBAAmB,SAAAJ,GACf,IAAMK,EAAWxB,EAAKyB,MAAMD,SAC5BL,EAAMO,iBACF1B,EAAKyB,MAAMb,QAAUZ,EAAKyB,MAAMZ,QAAUb,EAAKyB,MAAMX,MACpC,kBAAbU,EACA5B,EAAO,kBAEW,gCAAb4B,EACL5B,EAAO,mBAEW,sBAAb4B,EACL5B,EAAO,kBAEW,oBAAb4B,EACL5B,EAAO,iBAEW,+BAAb4B,EACL5B,EAAO,kBAEW,wBAAb4B,EACL5B,EAAO,kBAEW,2BAAb4B,EACL5B,EAAO,mBAEW,mBAAb4B,EACL5B,EAAO,kBAEW,qBAAb4B,EACL5B,EAAO,kBAEW,eAAb4B,IACL5B,EAAO,oBAGX9D,EAAIU,aAAa,CACbmF,UAAW,WAEXhF,aAAcqD,EAAKyB,MAAMb,OACzBhE,qBAAsBoD,EAAKyB,MAAMZ,OACjChE,eAAgBmD,EAAKyB,MAAMX,IAC3BhE,YAAa0E,EACbI,UAAWhC,IAEVW,KAAK,SAAAC,GAAG,OAAIR,EAAKiB,kBACjBF,MAAM,SAAAC,GAAG,OAAIjE,QAAQC,IAAIgE,OAlGlChB,EAAKyB,MAAQ,CACTf,SAAU,GACVE,OAAQ,GACRC,OAAQ,GACRC,IAAK,GACLU,SAAU,GACV3D,iBAAiB,GAGrBmC,EAAK6B,gBAAkB7B,EAAK6B,gBAAgBC,KAArBxC,OAAAyC,EAAA,EAAAzC,CAAAU,IAXRA,mFAefE,KAAKI,eACLJ,KAAK2B,4DAGS,IAAAG,EAAA9B,KACdpE,EAAIoB,iBAAiBqD,KAAK,SAAAC,GAAG,OAE1BwB,EAAKvB,SAAS,CAAE5C,kBAAiB2C,EAAIG,sDA6BvBQ,GACrBjB,KAAKO,SAAS,CAAEe,SAAUL,EAAMxD,OAAO2D,yCAqD9B,IAAAW,EAAA/B,KAEL,OACI5C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0E,EAAD,CAAKrE,gBAAmBqC,KAAKuB,MAAM5D,kBACnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXH,EAAAC,EAAAC,cAACkB,EAAD,CAAWE,OAAK,GACZtB,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,oBACN3B,EAAAC,EAAAC,cAACS,EAAD,QAGPiC,KAAKuB,MAAM5D,iBACZP,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,cACN3B,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,SAAO6D,KAAK,gBAAZ,uBACA/D,EAAAC,EAAAC,cAAC6B,EAAD,CACIiC,MAAOpB,KAAKuB,MAAMb,OAClBuB,SAAUjC,KAAKgB,kBACfG,KAAK,SACLe,KAAK,SACLC,YAAY,iCAGhB/E,EAAAC,EAAAC,cAAA,SAAO6D,KAAK,gBAAZ,wCACA/D,EAAAC,EAAAC,cAAC6B,EAAD,CACIiC,MAAOpB,KAAKuB,MAAMZ,OAClBsB,SAAUjC,KAAKgB,kBACfG,KAAK,SACLe,KAAK,SACLC,YAAY,iCAGhB/E,EAAAC,EAAAC,cAAA,SAAO6D,KAAK,wBAAZ,0BACA/D,EAAAC,EAAAC,cAAC6B,EAAD,CACIiC,MAAOpB,KAAKuB,MAAMX,IAClBqB,SAAUjC,KAAKgB,kBACfG,KAAK,MACLe,KAAK,SACLC,YAAY,8BAGhB/E,EAAAC,EAAAC,cAAA,SAAO6D,KAAK,cAAZ,uBAEA/D,EAAAC,EAAAC,cAAA,UAAQnB,GAAG,WAAW8F,SAAUjC,KAAKoC,qBAAqBR,KAAK5B,OAC3D5C,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,UAAd,yBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,iBAAd,iBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,+BAAd,+BACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,qBAAd,qBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,mBAAd,mBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,8BAAd,8BACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,uBAAd,uBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,0BAAd,0BACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,kBAAd,kBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,oBAAd,oBACAhE,EAAAC,EAAAC,cAAA,UAAQ8D,MAAM,cAAd,eAGJhE,EAAAC,EAAAC,cAACgC,EAAD,CACI+C,WAAYrC,KAAKuB,MAAMb,QAAUV,KAAKuB,MAAMZ,QAAUX,KAAKuB,MAAMX,KACjEhD,QAASoC,KAAKqB,kBAFlB,aAUXrB,KAAKuB,MAAM5D,iBACZP,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,cACN3B,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,SAASjF,GAAG,QAAlC,QAA8CiB,EAAAC,EAAAC,cAAA,WAA9C,SAA0DF,EAAAC,EAAAC,cAAA,WAA1D,OACAF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,SAASjF,GAAG,QAAlC,SAA+CiB,EAAAC,EAAAC,cAAA,WAA/C,aAA+DF,EAAAC,EAAAC,cAAA,WAA/D,iBACAF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,MAAMjF,GAAG,QAA/B,MAAyCiB,EAAAC,EAAAC,cAAA,WAAzC,KAAiDF,EAAAC,EAAAC,cAAA,WAAjD,cACAF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,OAAOjF,GAAG,QAAOiB,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAA7C,QACAF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,QAAQjF,GAAG,QAAjC,aAAkDiB,EAAAC,EAAAC,cAAA,WAAlD,OAA4DF,EAAAC,EAAAC,cAAA,WAA5D,OACAF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,OAAOjF,GAAG,QAAOiB,EAAAC,EAAAC,cAAA,WAAvC,OAAiDF,EAAAC,EAAAC,cAAA,WAAjD,OACAF,EAAAC,EAAAC,cAAA,MAAIgF,MAAM,MAAMlB,MAAM,SAASjF,GAAG,QAAOiB,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAA/C,YAIP0C,KAAKuB,MAAMf,SAAS+B,OACjBvC,KAAKuB,MAAMf,SAASvB,IAAI,SAAAuD,GAAQ,OAC5BpF,EAAAC,EAAAC,cAAA,MAAImF,IAAKD,EAASE,KACdtF,EAAAC,EAAAC,cAAA,UAAMkF,EAAS/F,aAAckG,eAAeC,UAAUC,SAAU,CAAEC,sBAAuB,KACzF1F,EAAAC,EAAAC,cAAA,UAAMkF,EAAS9F,qBAAsBiG,eAAeC,UAAUC,SAAU,CAAEC,sBAAuB,KACjG1F,EAAAC,EAAAC,cAAA,UAAKkF,EAAS7F,gBACdS,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAI,SAAWR,EAASE,KAAMF,EAAS5F,cACjDQ,EAAAC,EAAAC,cAAA,WAAMkF,EAAS/F,cAAgB,GAAK+F,EAAS7F,gBAAkB6F,EAAS9F,sBAAsBiG,eAAeC,UAAUC,SAAU,CAAEC,sBAAuB,KAC1J1F,EAAAC,EAAAC,cAAA,eA3MzB,KA2MiC,GAAKkF,EAAS7F,gBAA+B6F,EAASd,UA5MtF,kBA4M+GiB,eAAeC,UAAUC,SAAU,CAAEC,sBAAuB,KACnJ1F,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2F,EAAD,CAAWrF,QAAS,kBAAMmE,EAAK3F,eAAeoG,EAASE,YAI/DtF,EAAAC,EAAAC,cAAA,qDA/MjB4F,aCmDRC,oNA5Db5B,MAAQ,CACNiB,SAAU,uFAKQ,IAAAV,EAAA9B,KAClBpE,EAAIM,YAAY8D,KAAK9C,MAAMkG,MAAMC,OAAOlH,IACrCkE,KAAK,SAAAC,GAAG,OAAIwB,EAAKvB,SAAS,CAAEiC,SAAUlC,EAAIG,SAC1CI,MAAM,SAAAC,GAAG,OAAIjE,QAAQC,IAAIgE,sCAI5B,OACI1D,EAAAC,EAAAC,cAACkB,EAAD,CAAWE,OAAK,GACZtB,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,mBACN3B,EAAAC,EAAAC,cAACgG,EAAD,CAAW/F,UAAU,aACjBH,EAAAC,EAAAC,cAAA,UAAK0C,KAAKuB,MAAMiB,SAASlB,aAIrClE,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,aACN3B,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,KAAT,8BAGR5F,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,kBACN3B,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,kBACN3B,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,oBAAY0C,KAAKuB,MAAMiB,SAAS9B,QAChCtD,EAAAC,EAAAC,cAAA,oBAAY0C,KAAKuB,MAAMiB,SAAS7B,QAChCvD,EAAAC,EAAAC,cAAA,iBAAS0C,KAAKuB,MAAMiB,SAAS5B,QAIzCxD,EAAAC,EAAAC,cAACqB,EAAD,KACIvB,EAAAC,EAAAC,cAACuB,EAAD,CAAKE,KAAK,aACN3B,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,KAAT,sCArDDE,cCqBJK,MAnBf,WACE,OACEnG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KACE3F,EAAAC,EAAAC,cAAA,WAGIF,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9D,IACjCzC,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW9D,IACzCzC,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWR,QCNjCS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASX,MACvB,2DCZNY,IAASC,OAAO7G,EAAAC,EAAAC,cAAC4G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBxB,WACrBA,UAAUyB,cAAcC,MAAMjE,KAAK,SAAAkE,GACjCA,EAAaC","file":"static/js/main.76971a2f.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport default {\n    // Get info from numbeo\n    getNumbeo: function (query) {\n        return axios.get(\"https://www.numbeo.com/api/indices?api_key=gfc0idlc9cvrs2&query=\" + query)\n    },\n\n    // Returns info\n    // getNumbeo: function () {\n    //     return axios.get(\"/api/cities\");\n    // },\n\n    // Gets city with the given id\n    // getNumbeo: function (id) {\n    //     return axios.get(\"/api/cities/\" + id);\n    // },\n\n    // Saves city info to the database\n    // saveCity: function (savedCity) {\n    //     console.log (savedCity)\n    //     return axios.post(\"/api/cities\", savedCities);\n    // },\n\n    // // Deletes city info with the given id\n    // deleteCity: function (id) {\n    //     return axios.delete(\"/api/cities/\" + id);\n    // }\n\n    // Gets all scenarios\n    getScenarios: function () {\n    return axios.get(\"/api/scenarios\");\n},\n\n    // Gets the scenarios with the given username\n    getScenario: function (id) {\n        return axios.get(\"/api/scenarios/\" + id);\n    },\n    // Deletes the scenario with the given id\n    deleteScenario: function (id) {\n        return axios.delete(\"/api/scenarios/\" + id);\n    },\n    // Saves a scenario to the database\n    saveScenario: function (scenarioData) {\n        alert(scenarioData.total_assets+ \" \"+scenarioData.income_in_retirement+\" \"+scenarioData.retirement_age+\" \"+scenarioData.target_city);\n        console.log(scenarioData);\n        return axios.post(\"/api/scenarios\", scenarioData);\n    },\n    getLoginStatus: () => {\n        return axios.get(\"/api/current_user\");\n    } \n}\n","import React from \"react\";\nimport \"./style.css\";\n// import { Link } from 'react-router-dom';\n\n\nfunction Nav(props) {\n    const renderLoginBtn = () => {\n      if (props.isAuthenticated) {\n        return (\n          <button onClick={logout}>Logout</button>\n        )\n      } else {\n        return (\n          <a href=\"http://localhost:5000/auth/google\">\n            <div className=\"google-btn\">\n              <div className=\"google-icon-wrapper\">\n                <img\n                  className=\"google-icon\"\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                  alt=\"signin\"\n                />\n              </div>\n              <p className=\"btn-text\">\n                <b>Log in with Google</b>\n              </p>\n            </div>\n          </a>\n        )\n      }\n    }\n\n    const logout = () => {\n      console.log('logout');\n    }\n\n    return (\n    <div className=\"container-fluid sticky-top\">\n    <div className=\"row\">\n        <div className=\"col-xl-2 bg-white\"></div>\n          <div className=\"col-xl-12 px-0\">\n            <nav className=\"navbar navbar-expand-sm navbar-light bg-white\"id=\"banner\">  \n                <h4 className=\"text-blue\">Retirement Calculator</h4> \n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li> <a href=\"https://travel.state.gov/content/travel/en/international-travel/while-abroad/retirement-abroad.html\" target=\"_blank\" rel=\"noopener noreferrer\"> Global Retirement Considerations </a></li>\n                    </ul>   \n                </div>\n                <div className=\"google-btn-container\">\n                    {renderLoginBtn()}\n                    {/* <a href=\"http://localhost:5000/auth/google\">\n                    \n                      <div className=\"google-btn\">\n                        <div className=\"google-icon-wrapper\">\n                          <img\n                            className=\"google-icon\"\n                            src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                            alt=\"signin\"\n                          />\n                        </div>\n                        <p className=\"btn-text\">\n                          <b>Log in with Google</b>\n                        </p>\n                      </div>\n                    </a> */}\n                </div>\n            </nav>\n          </div>\n        <div className=\"col-xl-2 bg-white\"></div>\n    </div>\n  \n</div>\n\n\n    );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n// import InputForm from '../InputForm';\n\nexport function GetStarted(props) {\n    return (\n      \n      <div> \n        <h3>Welcome to Global Retirement Solutions. </h3>\n          <h3>  Get started now!</h3>\n        {/* <p>Enter in your info, and pick a city to get started!</p>\n        <p>Compare multiple cities in the table below.</p> */}\n      </div>\n    );\n  }\n\n// class GetStarted extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             showInfo: false,\n//             hideStart: false\n//         };\n//     }\n\n//     onClick(e) {\n//         e.preventDefault();\n//         this.setState({\n//             showInfo: !this.showInfo,\n//             hideStart: !this.hideStart\n//         })\n//     }\n\n\n//     render() {\n//         const {hideStart} = this.state;\n//         return (\n//             <div>\n//                 <div className=\"row\">\n//                     <div className=\"col-md-3\"></div>\n//                     <div className=\"col-md-6 solution\">\n//                         <div className={`solution-header ${hideStart ? 'hide' : ''}`}> \n//                             <h3>Welcome to your Global Retirement Solutions!</h3>\n//                             <p>Enter in your info, and pick a city to get started!</p>\n//                             <p>Compare multiple cities in the table below. Click on a city to view information about that city.</p>\n//                             <div className=\"panel-body\">\n//                                 <button onClick={ (e) => this.onClick(e) } className=\"btn btn-info\" id=\"submit-btn\" type=\"submit\">Get Started</button>\n//                             </div>\n//                         </div>\n\n//                     </div>\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <div className=\"col-md-12\">\n//                         <div className=\"inputForm\">\n//                             {  this.state.showInfo && <InputForm />  }\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default GetStarted;","import React from \"react\";\n\n// Exporting the Jumbotron, Container, Row, and Col components from this file\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className='container-fluid'>{children}</div>\n  // return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className='row'>{children}</div>\n  // return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}","import React from 'react';\n// import { withRouter } from 'react-router-dom';\n// import axios from 'axios';\n// import API from \"../../utils/API\";\nimport \"./style.css\";\n// import Table from '../Table';\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function SelectCity(props) {\n    return (\n        <div className=\"form-group\">\n             <select name=\"city\">\n                  <option value=\"Naples, Italy\">Naples, Italy</option>\n                  <option value=\"Dubai, United arab Emirates\">Dubai, United Arab Emirates</option>\n                  <option value=\"Cebu, Philippines\">Cebu, Philippines</option>\n                  <option value=\"Shanghai, China\">Shanghai, China</option>\n                  <option value=\"Manchester, United Kingdom\">Manchester, United Kingdom</option>\n                  <option value=\"Casablanca, Morocco\">Casablanca, Morocco</option>\n                  <option value=\"New Orleans, Louisiana\">New Orleans, Louisiana</option>\n                  <option value=\"Granada, Spain\">Granada, Spain</option>\n                  <option value=\"Phoenix, Arizona\">Phoenix, Arizona</option>\n                  <option value=\"Goa, India\">Goa, India</option>\n              </select>\n         </div>\n    );\n  }\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-info\">\n      {props.children}\n    </button>\n  );\n}\n\n\n// class InputForm extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             showTable: false,\n//             hideInfoForm: false,\n//             assets: '',\n//             income: '',\n//             age: '',\n//             city: ''\n//         };\n//         this.handleChange = this.handleChange.bind(this);\n//     }\n    \n//     onClick(e) {\n//         e.preventDefault();\n//         this.setState({\n//             showTable: !this.showTable,\n//             hideInfoForm: !this.hideInfoForm\n//         })\n//         console.log(this.state.assets);\n//         console.log(this.state.income);\n//         console.log(this.state.age);\n\n//         API.saveScenario({\n//             user_name: \"username\",\n//             total_assets: this.state.assets,\n//             income_in_retirement: this.state.income,\n//             retirement_age: this.state.age,\n//             target_city: this.state.city\n//         })\n\n//     }\n\n//     handleChange = (event) => {\n//         this.setState({\n//             [event.target.name]: event.target.value\n//         })\n//     }\n\n//     render() {\n//         const {hideInfoForm} = this.state;\n//         return (\n//             <div>\n//                 <div className=\"row\">\n//                     <div className=\"col-md-12\">\n//                         {/* Add User Info */}\n//                         <div className={`card mb-4 info-header ${hideInfoForm ? 'hide' : ''}`}>\n//                             <div className=\"card-header\"><h2>Add Your Info</h2></div>\n//                             <div className=\"card-body\">\n\n//                                 {/* Entry Form */}\n//                                 <form>\n//                                     <div className=\"form-group\">\n//                                         <p>{this.state.assets}</p>\n//                                         <label name=\"assets-input\">IRA/401k Assets [$]</label>\n//                                         <input name=\"assets\" onChange={this.handleChange} value={this.state.assets} className=\"form-control\" id=\"assets-input\" type=\"number\" min=\"0\" placeholder=\"Enter an amount here\" />\n//                                     </div>\n//                                     <div className=\"form-group\">\n//                                         <label name=\"income-input\">Average Annual Retirement Income [$]</label>\n//                                         <input name=\"income\" onChange={this.handleChange} value={this.state.income} className=\"form-control\" id=\"income-input\" type=\"number\" min=\"0\" placeholder=\"Enter an amount here\"/>\n//                                     </div>\n//                                     <div className=\"form-group\">\n//                                         <label name=\"retirement-age-input\">Desired Retirement Age</label>\n//                                         <input name=\"age\" onChange={this.handleChange} value={this.state.age} className=\"form-control\" id=\"retirement-age-input\" type=\"number\" min=\"0\" max=\"80\" placeholder=\"Enter your age here\"/>\n//                                     </div>\n//                                     <div className=\"form-group\">\n//                                         <label name=\"city-input\">Select City</label>\n//                                         {/* <form> */}\n//                                             <select name=\"city\" value={this.state.city} onChange={this.handleChange} id=\"city-select\">\n//                                                 <option value=\"Naples, Italy\">Naples, Italy</option>\n//                                                 <option value=\"Dubai, United arab Emirates\">Dubai, United Arab Emirates</option>\n//                                                 <option value=\"Cebu, Philippines\">Cebu, Philippines</option>\n//                                                 <option value=\"Shanghai, China\">Shanghai, China</option>\n//                                                 <option value=\"Manchester, United Kingdom\">Manchester, United Kingdom</option>\n//                                                 <option value=\"Casablanca, Morocco\">Casablanca, Morocco</option>\n//                                                 <option value=\"New Orleans, Louisiana\">New Orleans, Louisiana</option>\n//                                                 <option value=\"Granada, Spain\">Granada, Spain</option>\n//                                                 <option value=\"Phoenix, Arizona\">Phoenix, Arizona</option>\n//                                                 <option value=\"Goa, India\">Goa, India</option>\n//                                             </select>\n//                                         {/* </form> */}\n//                                     </div>\n\n//                                     <button onClick={ (e) => this.onClick(e) } className=\"btn btn-info float-right\" id=\"info-btn\">Submit</button>\n//                                 </form>\n\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"row\">\n//                     <div className=\"col-md-12\">\n//                         <div className=\"inputForm\">\n//                             {  this.state.showTable && <Table />  }\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default InputForm;\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;","import React, {Component} from \"react\";\nimport API from \"../utils/API\";\n// import BackgroundMap from '../components/BackgroundMap';\nimport Nav from \"../components/Nav\"\nimport { GetStarted } from \"../components/GetStarted\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/InputForm\";\nimport \"./MainPage.css\";\n// import Table from \"../components/Table\";\n// import { List, ListItem } from \"../components/List\";\nimport { Link } from \"react-router-dom\";\nimport DeleteBtn from '../components/DeleteBtn';\n// import { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\n\nvar cpir;\nconst AtlantaCpiR = 59.6549832654245;\nconst AtlantaMin = 50000;\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: [],\n            assets: \"\",\n            income: \"\",\n            age: \"\",\n            cityname: \"\",\n            isAuthenticated: false\n        }\n\n        this.fetchUserStatus = this.fetchUserStatus.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadScenario();\n        this.fetchUserStatus();\n      }\n\n    fetchUserStatus() {\n        API.getLoginStatus().then(res => \n        // console.log(res)\n           this.setState({ isAuthenticated: res.data ? true : false })    \n        );\n    }\n\n    loadScenario = () => {\n        API.getScenario()\n          .then(res =>\n            this.setState({ userData: res.data, assets: \"\", income: \"\", age: \"\" })\n          )\n          .catch(err => console.log(err));\n      };\n\n    deleteScenario = id => {\n        API.deleteScenario(id)\n            .then(res => this.loadScenarios())\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    // handleChange = city => {\n    //     this.setState({ city });\n    //     console.log(`Option selected:`, selectedOption);\n    //   };\n\n    handleDropdownChange(event) {\n    this.setState({ cityname: event.target.value });\n    }\n\n    handleFormSubmit = event => {\n        const cityname = this.state.cityname;\n        event.preventDefault();\n        if (this.state.assets && this.state.income && this.state.age) {\n            if (cityname === \"Naples, Italy\"){\n                cpir = 40.65343800624011;\n            }\n            else if (cityname === \"Dubai, United arab Emirates\"){\n                cpir = 60.344308883038124;\n            }\n            else if (cityname === \"Cebu, Philippines\"){\n                cpir = 24.68352402508564;\n            }\n            else if (cityname === \"Shanghai, China\"){\n                cpir = 41.3093973241673;\n            }\n            else if (cityname === \"Manchester, United Kingdom\"){\n                cpir = 47.33519074664601;\n            }\n            else if (cityname === \"Casablanca, Morocco\"){\n                cpir = 25.37699284160013;                ;\n            }\n            else if (cityname === \"New Orleans, Louisiana\"){\n                cpir = 63.194776006844265;\n            }\n            else if (cityname === \"Granada, Spain\"){\n                cpir = 37.49249300604065;\n            }\n            else if (cityname === \"Phoenix, Arizona\"){\n                cpir = 51.57627856974486;\n            }\n            else if (cityname === \"Goa, India\"){\n                cpir = 16.734851081616867;\n            }\n    \n            API.saveScenario({\n                user_name: \"username\",\n                // _id: this.state.id,\n                total_assets: this.state.assets,\n                income_in_retirement: this.state.income,\n                retirement_age: this.state.age,\n                target_city: cityname,\n                city_cpir: cpir\n            })\n                .then(res => this.loadScenarios())\n                .catch(err => console.log(err));\n        }\n    };\n\n// The render method returns the JSX that should be rendered\n    render() {\n        \n        return (\n            <div>\n            <Nav isAuthenticated = {this.state.isAuthenticated}/>\n            <div className='wrapper'>\n                {/* <BackgroundMap /> */}\n                <Container fluid>\n                    <Row>\n                        <Col size='md-8 get-started'>\n                            <GetStarted />\n                        </Col>\n                    </Row>\n                    {this.state.isAuthenticated && \n                    <Row >\n                        <Col size='md-12 form'>\n                            <form>\n                                <h3>Add Info</h3>\n                                {/* User input assets */}\n                                <label name=\"assets-input\">IRA/401k Assets [$]</label>\n                                <Input\n                                    value={this.state.assets}\n                                    onChange={this.handleInputChange}\n                                    name=\"assets\"\n                                    type=\"number\"\n                                    placeholder=\"Enter amount here (required)\"\n                                />\n                                {/* User input retirement income */}\n                                <label name=\"income-input\">Average Annual Retirement Income [$]</label>\n                                <Input\n                                    value={this.state.income}\n                                    onChange={this.handleInputChange}\n                                    name=\"income\"\n                                    type=\"number\"\n                                    placeholder=\"Enter amount here (required)\"\n                                />\n                                {/* User input age */}\n                                <label name=\"retirement-age-input\">Desired Retirement Age</label>\n                                <Input\n                                    value={this.state.age}\n                                    onChange={this.handleInputChange}\n                                    name=\"age\"\n                                    type=\"number\"\n                                    placeholder=\"Enter age here (required)\"\n                                />\n                                {/* User input city */}\n                                <label name=\"city-input\">Select Desired City</label>\n\n                                <select id=\"dropdown\" onChange={this.handleDropdownChange.bind(this)}>\n                                    <option value=\"select\">--- Select a City ---</option>\n                                    <option value=\"Naples, Italy\">Naples, Italy</option>\n                                    <option value=\"Dubai, United arab Emirates\">Dubai, United arab Emirates</option>\n                                    <option value=\"Cebu, Philippines\">Cebu, Philippines</option>\n                                    <option value=\"Shanghai, China\">Shanghai, China</option>\n                                    <option value=\"Manchester, United Kingdom\">Manchester, United Kingdom</option>\n                                    <option value=\"Casablanca, Morocco\">Casablanca, Morocco</option>\n                                    <option value=\"New Orleans, Louisiana\">New Orleans, Louisiana</option>\n                                    <option value=\"Granada, Spain\">Granada, Spain</option>\n                                    <option value=\"Phoenix, Arizona\">Phoenix, Arizona</option>\n                                    <option value=\"Goa, India\">Goa, India</option>\n                                </select>\n\n                                <FormBtn\n                                    disabled={!(this.state.assets && this.state.income && this.state.age)}\n                                    onClick={this.handleFormSubmit}\n                                >\n                                    Submit\n                                </FormBtn>\n                            </form>\n                        </Col>\n                    </Row>\n                    }\n                    {this.state.isAuthenticated &&\n                    <Row>\n                        <Col size='md-8 table' >\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\" value=\"assets\" id=\"col1\">Total<br />Assets<br />[$]</th>\n                                        <th scope=\"col\" value=\"income\" id=\"col2\">Annual<br />Retirement<br />Income [$/yr]</th>\n                                        <th scope=\"col\" value=\"age\" id=\"col3\">Age<br />at<br />Retirement</th>\n                                        <th scope=\"col\" value=\"city\" id=\"col4\"><br /><br />City</th>\n                                        <th scope=\"col\" value=\"funds\" id=\"col5\">Retirement<br />Fund<br />[$]</th>\n                                        <th scope=\"col\" value=\"need\" id=\"col6\"><br />Need<br />[$]</th>\n                                        <th scope=\"col\" value=\"delete\" id=\"col7\"><br /><br />Delete</th>\n                                    </tr>\n                                </thead>\n\n                                {this.state.userData.length ? (\n                                    this.state.userData.map(scenario => (\n                                        <tr key={scenario._id}>\n                                            <td>{(scenario.total_assets).toLocaleString(navigator.language, { maximumFractionDigits: 0 })}</td>\n                                            <td>{(scenario.income_in_retirement).toLocaleString(navigator.language, { maximumFractionDigits: 0 })}</td>\n                                            <td>{scenario.retirement_age}</td>\n                                            <td><Link to={\"/city/\" + scenario._id}>{scenario.target_city}</Link></td>\n                                            <td>{(scenario.total_assets + (80 - scenario.retirement_age) * scenario.income_in_retirement).toLocaleString(navigator.language, { maximumFractionDigits: 0 })}</td>\n                                            <td> {((80 - scenario.retirement_age) * AtlantaMin * scenario.city_cpir / AtlantaCpiR).toLocaleString(navigator.language, { maximumFractionDigits: 0 })}</td>\n                                            <td><DeleteBtn onClick={() => this.deleteScenario(scenario._id)} /></td>\n                                        </tr>\n                                    ))\n                                ) : (\n                                        <h3>No results to display yet!</h3>\n                                    )}\n                            </table>\n                        </Col>\n                    </Row>\n                    }\n                </Container>\n                </div>\n            </div>\n         );\n        \n    }  //render\n\n}\n\nexport default MainPage","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../utils/API\";\nimport \"./City.css\";\nimport Jumbotron from \"../components/Grid\";\n\nclass City extends Component {\n  state = {\n    scenario: {}\n  };\n\n  // When this component mounts, grab the scenario with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    API.getScenario(this.props.match.params.id)\n      .then(res => this.setState({ scenario: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col size='md-12 city-info'>\n                    <Jumbotron className=\"jumbotron\">\n                        <h3>{this.state.scenario.cityname}</h3>\n                    </Jumbotron>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"md-2 back\">\n                    <Link to=\"/\">← Back to Main Page</Link>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"md-8 user-info\">\n                    <article>\n                        <h3>More City Information</h3>\n                        <p>Cost of Living: </p>\n                        <p>Property Prices: </p>\n                        <p>Crime: </p>\n                        <p>Health Care: </p>\n                        <p>Pollution: </p>\n                        <p>Traffic: </p>\n                        <p>Quality of Life: </p>\n                        <p>Travel: </p>\n                    </article>\n                </Col>\n                <Col size=\"md-3 user-info\">\n                    <article>\n                        <h3>Your Retirement Info</h3>\n                        <p>Assets: {this.state.scenario.assets}</p>\n                        <p>Income: {this.state.scenario.income}</p>\n                        <p>Age: {this.state.scenario.age}</p>\n                    </article>\n                </Col>\n            </Row>\n            <Row>\n                <Col size=\"md-2 back\">\n                    <Link to=\"/\">← Back to Main Page</Link>\n                </Col>\n            </Row>\n        </Container>\n    );\n  }\n}\n\nexport default City;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n// import BackgroundMap from './components/BackgroundMap';\n// import Nav from './components/Nav';\nimport MainPage from './pages/MainPage';\nimport City from './pages/City';\n// import Table from './components/Table';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* <Nav /> */}\n        {/* <BackgroundMap> */}\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/mainpage\" component={MainPage} />\n            <Route exact path=\"/city/:id\" component={City} />\n            {/* <Route component={NoMatch} /> */}\n          </Switch>\n        {/* </BackgroundMap> */}\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}